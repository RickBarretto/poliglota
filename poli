#! /usr/bin/env arturo

usage: {:
  COMMANDS:
    new <project>
    new <project> --empty
    add <template> <project>
    add <template> <project> --as <implementation>

  FUTURE?
    add <implementation> <project> --empty
    fill <project>
:}


; -- COMMANDS:

newProject: $[name :string][

    if attr? 'empty [
        execute ~"mkdir repository/|name|"
        exit
    ]

    copy.directory "templates/" ~"repository/|name|"
    exit
]

addImplementation: $[
    template :string
    project :string
    implementation :string
][
    copy.directory "templates/|template|/"
        ~"repository/|project|/|implementation|"
    exit
]

; -- PARSER

minimal: [args number][
    ensure -> args\[number]
]

parser: $[args][

    f: first args
    case [f]
    when? [= "new"] [

        drop 'args 1

        if some? ["--help" "-h"] 'op -> in? op args [
            ; help.new
        ]

        if some? ["--empty" "-e"] 'op -> in? op args [
            remove 'args ["--empty" "-e"]
            newProject.empty (first args)
        ]

        minimal args 1
        newProject (first args)

    ]

    when? [= "add"] [

        drop 'args 1
        minimal args 2

        if some? ["--help" "-h"] 'op -> in? op args [
            ; help.new
        ]

        as: false
        loop ["--as" "-a"] 'op
        -> if in? op args [
            as: get args (1 + (index args op))
            remove 'args "--as"
            remove 'args as
            break
        ]

        template: (get args 1)
        project: (get args 2)
        name: (string? as)?
            -> as
            -> template

        addImplementation template project name

    ]


    else -> panic ~"Your arguments: |arg|\n|usage|"

]

try? -> parser arg
else -> panic ~"Your arguments: |arg|\n|usage|"
